Requirement:

Upload the video.
share the video
search based on title
records the stats like dislike / total number of views.
view/add comments


 If, on average, a user views five videos per day then the total video-views per second would be:

800M * 5 / 86400 sec => 46K videos/sec

et’s assume our upload:view ratio is 1:200, i.e., for every video upload we have 200 videos viewed, giving us 230 videos uploaded per second.

46K / 200 => 230 videos/sec


streamVideo(api_dev_key, video_id, offset, codec, resolution)
searchVideo(api_dev_key, search_query, user_location, maximum_videos_to_return, page_token)
uploadVideo(api_dev_key, video_title, vide_description, tags[], category_id, default_language, 
                        recording_details, video_contents)
						
						
Processing Queue: Each uploaded video will be pushed to a processing queue to be de-queued later for encoding, thumbnail generation, and storage.
Encoder: To encode each uploaded video into multiple formats.
Thumbnails generator: To generate a few thumbnails for each video.
Video and Thumbnail storage: To store video and thumbnail files in some distributed file storage.
User Database: To store user’s information, e.g., name, email, address, etc.
Video metadata storage: A metadata database to store all the information about videos like title, file path in the system, uploading user, total views, likes, dislikes, etc. It will also be used to store all the video comments.


Video metadata storage - MySql
Videos metadata can be stored in a SQL database. The following information should be stored with each video:

VideoID
Title
Description
Size
Thumbnail
Uploader/User
Total number of likes
Total number of dislikes
Total number of views


For each video comment, we need to store following information:

CommentID
VideoID
UserID
Comment
TimeOfCreation


Thumbnails are small files with, say, a maximum 5KB each.
Read traffic for thumbnails will be huge compared to videos. Users will be watching one video at a time, but they might be looking at a page that has 20 thumbnails of other videos.

Video deduplications:
Intelligently check duplcation of video. If part of the video or chunk is avalialb ewill not upload that part.
It save reporcessing encoding caching etch.